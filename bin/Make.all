#!/bin/csh -f
# Build new libs and binaries in $TELHOME
# usage: Make.all [-reset] [-release XXX] site

#sto 4-19-2001: updated to CVS 
# build structure:
# source dir ('root' of source code)
#set sourcedir = 'telescope'
set sourcedir = 'torus/talon'

# crack args
set release = ""
while ("$1" =~ -*)
    switch ($1)
    case "-reset":
	set reset
	breaksw
    case "-release":
	shift
	set release = "-r $1"
	breaksw
    default:
	goto usage
	breaksw
    endsw
    shift
end

# get site
if ($#argv != 1) goto usage
set site = $1

# insure a TELHOME env var
if (! $?TELHOME) then
    echo no TELHOME
    exit 1
endif

# work wrt development root
set basedir = `pwd`
if ($basedir:t != "telescope") then
    # make a guess we can find it
    if (-d "$sourcedir/GUI/xephem") then
	# we're okay as we are...
	# cd $sourcedir
	# set basedir = `pwd`
    else
	echo not in development root
	exit 1
    endif
endif
set path = ($basedir/bin $path)

# always need TELHOME
if (! -e $TELHOME) mkdir -p $TELHOME
if (! -e $TELHOME) then
    echo can not mkdir $TELHOME
    exit 1
endif

# clean all or some
if ($?reset) then
    echo resetting $TELHOME
    touch $TELHOME/x.x
    rm -fr $TELHOME/*
    set n = `find $TELHOME -print | wc -l`
    if ($n > 1) then
	echo can not clean out $TELHOME
	exit 1
    endif
    #(cd bin; co -q Ins.mktelhome)
    (cd bin; cvs -q checkout Ins.mktelhome)
    rehash
    Ins.mktelhome
    if ($status) exit 1
else
    # clean the minimum for new build software build
    # N.B. any others are cleaned/created as needed by each Makefile
    foreach d (lib bin)
	set thd = $TELHOME/$d
	rm -fr $thd
	if (-e $thd) then
	    echo can not clean out $thd
	    exit 1
	endif
	mkdir -p $thd
    end
endif

# say what
echo building new $TELHOME for $site based at $basedir

# make sure everything is checked out
# (STO) removed this 'cause it's not really what we want and it's not portable...
# echo check out everything fresh
# (cd bin; co -q rcstree)
# rehash
# rcstree rcsclean -q -u
# (cd bin; co -q RCS/*)
# rehash
# rcstree -i -d -l co -q -r"$release"
# (cd $basedir; cvs -q checkout $release $sourcedir)

# if ($status) exit

# set the list of desired passes to make, in order
set passes = (						\
    clobber	# rm objects, libs, executables		\
    pass3	# supporting config files		\
    pass2 	# make libraries			\
    pass4 	# make daemon processes 		\
    pass5 	# make command-line programs		\
    pass6 	# make GUI programs			\
    pass8	# make device drivers			\
    pass8b	# make device driver tools		\
    )

# go
foreach p ($passes)
    cd $basedir
    echo Make pass $p
    Make.pass $p $site
    if ($status) exit 1
end

echo Now run \`Make.pass pass8a $site\' as root for drivers, login and booting.
exit 0

usage:
echo "$0:t [-reset] [-release XXX] site"
exit 1

# For CVS Only -- Do Not Edit
# $Id: Make.all,v 1.1.1.1 2003/04/15 20:47:55 lostairman Exp $ 
