#################
# THIS VERSION 
# EDITED JUNE 5, 2002 -- after fix to pvslave code and feedback from 2002-05-02 update
# Addendum edit made 2002-05-06 to fix remaining hflip for chip D1
##################

# read by pvcam to set local options
# 1.0m camera

# used for testing only
$testMode = 0;
$multicpu = 1;

# Turn on for informational messages in log
$traceon = 1;

# Turn on for verbose / debug messages in log (traceon must also be 1)
$verboseTrace = 0;

# Camera ID string
$id = "Pixel Vision 4kx2kx10";

#------------------------------------------------

# CCD Chip Grouping information
# This section defines the grouping of the chips to each slave computer
# and describes the offset relationship to the image as a whole
# The offsets are in arcminutes.
# Rotation bit codes are: (2 = hflip, 4 = vflip)
#	0 = no rotation or flip
#	1 = rotate left				-1 = rotate right
#	2 = flip horizontal
#	3 = flip horizontal then rotate left	-3 = flip horizontal then rotate right
#	4 = flip vertical
#	5 = flip vertical then rotate left 	-5 = flip vertical then rotate right
#       6 = flip both horizontal and vertical
#       7 = flip both ways then rotate left	-7 = flip both ways then rotate right
#
# NOTE: GROUP 0 MUST BE THE SKY MONITOR

$GroupInfo = [

# Group 0: Sky Monitor (computer A)
{ Name			=> "onem-1",		# name of the computer that receives this group
  Cmd			=> "pvslave",		# name of script to run
  FilewaitDir 	=> "/mnt/raid/filewait",
  Size 			=> [ 700,1100 ],	# width and height of combined image file [ w,h ]
  SectionCuts 	=> [				# "name", "x y w h", offset, rotation for each section to cut	
		"a1", "0 0 700 550", 80.025, 14.025 , 0,
		"a2", "0 550 700 550", -79.975, -24.308, 0,
		   ],				
},

# Group 1: Computer B
{ Name			=> "onem-2",		# name of the computer that receives this group
  Cmd			=> "pvslave",		# name of script to run
  FilewaitDir 	=> "/mnt/raid/filewait",
  Size 			=> [ 8800,4150 ],	# width and height of combined image file
  SectionCuts 	=> [				# "name", "x y w h", offset, rotation for each section to cut	
	        "b1", "0130 0000 2048 4096", -55.64938, 54.40274, 2,
	        "b2", "2330 0000 2048 4096", -18.74966, 54.74459, 2,
	    	"b3", "4530 0000 2048 4096",  18.22787, 55.13859, 2,
	    	"b4", "6622 0000 2048 4096",  55.13932, 55.19902, 2,
  	    	   ],
},

# Group 2: Computer C
{ Name			=> "onem-3",		# name of the computer that receives this group
  Cmd			=> "pvslave",		# name of script to run
  FilewaitDir 	=> "/mnt/raid/filewait",
  Size 			=> [ 2200,12450 ],	# width and height of combined image file
  SectionCuts 	=> [				# "name", "x y w h", offset, rotation for each section to cut	
  	        "c1", "0126 0000 2048 4096", -36.45787, -0.19662, -1,
		"c2", "0026 4204 2048 4096", -55.24597,-55.03617, 2,
  		"c3", "0026 8354 2048 4096", -18.32910,-54.95198, 2,
  	    	   ],
},

# Group 3: Computer D
{ Name			=> "onem-4",		# name of the computer that receives this group
  Cmd			=> "pvslave",		# name of script to run
  FilewaitDir 	=> "/mnt/raid/filewait",
  Size 			=> [ 2200,12450 ],	# width and height of combined image file
  SectionCuts 	=> [				# "name", "x y w h", offset, rotation for each section to cut	
  	        "d1", "0025 0000 2048 4096", 18.67138,-54.69970, 6,
		"d2", "0025 4204 2048 4096", 55.62769,-54.34168, 2,
  		"d3", "0126 8354 2048 4096", 36.48772,  0.22226, -1,
  	    	   ],
}

];	# end of GroupInfo

#------------------------------------------------

# Information about return choices
# format: "cpuName", "cutFrame", offset, rotate
$ReturnInfo = [
 # Choice 0:
	# The west side of the center (C1)
	[ "onem-3", "588 0 512 512", 4.000, 0.075, -1 ],

 # Choice 1:
 	# The east side of the center (D3)
	[ "onem-4", "588 8300 512 512", -4.000, 0.020, -1 ],
	
 # Choice 2:
	# Below center, split (B2 & B3)
	[ "onem-2", "4144 1819 512 512", 0.00, 54.732, 2 ],

 # Choice 3:
 	# The east sky monitor (A1)
	[ "onem-1", "0 0 700 550", 80.025, 14.025, 0 ],

 # Choice 4:
	# The west sky monitor (A2)
	[ "onem-1", "0 700 700 550", -79.975, -24.308, 0 ],

 # Choice 5:
	# Both sky monitors
	[ "onem-1", "0 0 700 1100", 0, 0, 0 ],
	
# Return a single full chip:  Not selectable w/PVOptions... set $ReturnChoice manually
 # Choice 6 - 9 : B1 - B4
 	[ "onem-2", "0 0 2200 4150", -56.050,54.065, 2 ],
	[ "onem-2", "2200 0 2200 4150", -19.204,54.513, 2   ],
	[ "onem-2", "4400 0 2200 4150", 17.738,54.950, 2 ],
	[ "onem-2", "6600 0 2200 4150", 54.579,54.771, 2 ],
	
 # Choice 10 - 12 : C1 - C3
        [ "onem-3", "0 0 2200 4150", -36.350, -0.383, -1 ],
	[ "onem-3", "0 4150 2200 4150", -54.596, -55.075, 2 ],
  	[ "onem-3", "0 8300 2200 4150", -17.763,-54.825, 2 ],
	
 # Choice 13 - 15 : D1 - D3
  	[ "onem-4", "0 0 2200 4150", 19.208,-54.579, 4 ],
	[ "onem-4", "0 4150 2200 4150", 56.025,-54.363, 2 ],
  	[ "onem-4", "0 8300 2200 4150", 36.417, 0.083, -1 ],
  	
 # Choice 16: the entire B group
 	[ "onem-2", "0 0 8800 4150", 0, 54.732, 2 ],  	
	
]; # end of ReturnInfo

# Choice from above to use for return section
$ReturnChoice = 7;
# name of section that is returned to system
$ReturnName = "return";

# common file location where this is copied for return to system
# ($TELHOME/archive is common)
$ReturnImgFile = "$TELHOME/archive/pvrtn.fit";

# Enable groups: Set to 0 to disable a particular group (0-3)
@GroupEnable = (0,1,0,0);

# Set to 1 to make any flat images return a "fake" return component
$FakeFlats = 0;

# Set to 0 to disable post-processing script from running
$enablePostProcessing = 0;

#----------------------------------------------------

# names for temporary calibration files
$biasName = "bias";
$thermName = "therm";
$flatName = "flat";

# set to 1 to enable sky monitor, else 0
$useSkyMonitor = 0;

# set to 1 if sky monitor images should be stored
# or 0 if they should just be returned visually
$storeSkyMonitorImgs = 0;

# name of fifo sky monitor communicates with (in $TELHOME/comm)
$SkyListen = "SkyListen";

# ==========================

# fake temperature
$faketemp = -100;

$maxbx = 2;		# 3 causes pv software to choke
$maxby = 2;

# trigger LP bits
$lpshut = 0x1;		# LP data bit to activate Shutter
$lptrig = 0x2;		# LP data bit to activate Trigger

# how to run the lpio command
# and the stampfits command
# These run on slaves, so the command is direct:
$lpiocmd = "lpio";
$stampcmd = "stampfits";

# error file returned to master to signify error
# in common location ($TELHOME/archive is shared)
$msterr = "$TELHOME/archive/logs/pvslaverr.txt";

$base = "/mnt/raid/user/images"; 	# base name and path for output files
#$base = "/home/steve/pvc1m/images";

# This must be in a location that can be seen by all the computers
# at the same pathname ($TELHOME/archive is shared)
$fitsnow = "$TELHOME/archive/fitsnow";  # temp file for placeholder fits header

# timeouts -- pertains to each group
$dlto = 240;		# time for camera to download image
$lanto = 30;	# max time to get image over lan

# err and trace log
# This also should be in a common place ($TELHOME/archive is shared)
$elog = "$TELHOME/archive/logs/pvc1m.log";

# timeout for skymonitor when used as return section
$skyMonitorTimeout = 60;
