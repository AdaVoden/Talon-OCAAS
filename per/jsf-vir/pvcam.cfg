# read by pvcam to set local options
# 0.5m camera

# Camera ID string
$id = "Virtual PVCamera";

$truew = 1024; #2048;   	# true size of camera
$trueh = 512; # 2048;

# ---------------------
# stsci stuff
$url = "http://stdatu.stsci.edu/cgi-bin/dss_search";
$survey = 1;
$harcmin = 2119/60;
$varcmin = 2119/60;

# ==========================

$imw = 512;		# size of center section to return to camera	
$imh = 512;

# Cutting options
# definitions of area to cut for each component
# starting with number 1

#$xywhdef[1] = "0 0 1024 2048";
#$xywhdef[2] = "1024 0 1024 2048";
$xywhdef[1] = "0 0 512 512";
$xywhdef[2] = "512 0 512 512";

# suffix strings for each section
# as a comma-delimited string of names
# note that section 00 is return section
$sectionNames = "center,m,n";

# names for temporary calibration files
$biasName = "bias";
$thermName = "therm";
$flatName = "flat";

# ==========================

# fake temperature
$faketemp = -100;

$maxbx = 2;		# 3 causes pv software to choke
$maxby = 2;

# trigger LP bits
$lpshut = 0x1;		# LP data bit to activate Shutter
$lptrig = 0x2;		# LP data bit to activate Trigger

# how to run the lpio command
if (`uname -n` eq "halfm\n") {
    $lpiocmd = "lpio";
} else {
#    $lpiocmd = "rsh halfm lpio";
	$lpiocmd = "echo rsh halfm lpio";
}

# shared file base dir, setup, go, done and result file
#$sfb = "/mdo/filewait";
$sfb = "$TELHOME/filewait";
$sfset = "$sfb/in/setting2.reg";
$sfgo = "$sfb/in/fit16snp";
$sfim = "$sfb/out/fitout.fit";

$base = "$TELHOME/user/images"; 	# base name and path for output files

$fitsnow = "$TELHOME/archive/fitsnow";  # temp file for placeholder fits header

# timeouts
$dlto = 40;		# time for camera to download image
$lanto = 40;		# max time to get image over lan

# err and trace log
$elog = "$TELHOME/archive/logs/pvcam.log";
